name: Continuous Deployment

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Code
        uses: actions/checkout@v3
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set up JDK 17.0.2
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17.0.2
          server-id: github
          cache: "maven"

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run JUnit Tests
        if: success()
        run: mvn test --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Maven Version
        id: set_maven_version
        run: echo "MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mc-pathfinding
          path: /home/runner/work/mc-pathfinding/mc-pathfinding/target/mc-pathfinding-${{ steps.set_maven_version.outputs.MAVEN_VERSION }}.jar

      - name: Create Tag and Release
        if: success()
        run: |
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          git config --global user.email ${{ secrets.GIT_EMAIL }}

          echo "creating tag ${{ steps.set_maven_version.outputs.MAVEN_VERSION }}"

          git tag -a "${{ steps.set_maven_version.outputs.MAVEN_VERSION }}" -m "Version ${{ steps.set_maven_version.outputs.MAVEN_VERSION }}"
          git push origin "${{ steps.set_maven_version.outputs.MAVEN_VERSION }}"

          gh release create "${{ steps.set_maven_version.outputs.MAVEN_VERSION }}" "/home/runner/work/mc-pathfinding/mc-pathfinding/target/mc-pathfinding-${{ steps.set_maven_version.outputs.MAVEN_VERSION }}.jar"
          gh release download --repo "${{ github.repository }}" "${{ steps.set_maven_version.outputs.MAVEN_VERSION }}" --pattern "*.jar"
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

      - name: Deploy to GitHub Packages
        if: success()
        run: mvn --batch-mode deploy -DGIT_COMMIT=${{ github.sha }} -DBUILD_NUMBER=${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
